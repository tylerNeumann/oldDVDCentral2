// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TN.DVDCentral.PL2.Data;

#nullable disable

namespace TN.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    [Migration("20240220185905_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("717c2657-2dbd-465c-9406-066241f68edf"),
                            UserId = new Guid("ed05b4b0-cc38-4549-9505-480f225dc135")
                        },
                        new
                        {
                            Id = new Guid("ca7f2486-51ec-4a2d-8f92-3eeef4b49588"),
                            UserId = new Guid("97876b90-63b0-40d7-9697-b5fb13eb13c2")
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fbe48e2-9be5-4f35-a218-586b76c7c945"),
                            CartId = new Guid("717c2657-2dbd-465c-9406-066241f68edf"),
                            MovieId = new Guid("009c321b-ef2f-4cb5-888c-164a3ac63d76"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("b9542aee-f864-4e78-8b4d-c9b410efb2d7"),
                            CartId = new Guid("717c2657-2dbd-465c-9406-066241f68edf"),
                            MovieId = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("5a5effe0-2bbf-4ff2-9f04-93d2c5c18848"),
                            CartId = new Guid("ca7f2486-51ec-4a2d-8f92-3eeef4b49588"),
                            MovieId = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a978aa6-e5f0-4d44-b05a-bbb2a790ceca"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("ed05b4b0-cc38-4549-9505-480f225dc135"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("0c929e50-c146-4a58-a062-ed60007d8b1d"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("97876b90-63b0-40d7-9697-b5fb13eb13c2"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("b520d8d7-152a-40e0-b2db-8ee42e3f739d"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("92583004-cf8f-47fa-9055-7af4620dc8ec"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3962d0e-9390-4c7b-ac0a-c38e67d316f3"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("eca68128-ae00-4a5c-b3d0-c3f52d3f7600"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("88dc49f2-9955-4821-bacd-8bf85949ba35"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("6b86c69d-f020-403a-9eed-d831b59e4e4b"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("3bfc900f-e0f1-44d0-8f18-93279623a5df"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("72a04064-fdf0-4794-af0d-d7a2a3a96c70"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("31bcc75a-2d3b-4b61-9d8d-5ede87a51bb6"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("000512ce-8e47-4059-84d2-02dc72caef57"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("9aa496be-0daa-46e2-9999-7e203f6edd70"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("550cacf1-8cce-430c-a7d8-9290232249f7"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8b75e63-a21f-4aa1-821b-87f696873661"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("efec83bc-e889-4807-b553-77992a126db8"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("30d85d21-57e7-4c12-9b74-4adb80d8898e"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("af84ec5a-4aff-4f0b-a91c-2267d8144322"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("7c9b4594-22a2-484b-8cdd-b2aae88420e9"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("24073d54-e4db-43f7-b68f-2d7779e66612"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("e5bf982e-f6ac-4367-af21-62c8cbb41294"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("dc137b92-eb56-41b8-8dfe-049c6dc08504"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("9e9c618c-eca4-48c8-b7a7-57d1ae5d506c"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("f3b26c92-31d9-411a-8392-6e2c6311c1d0"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("009c321b-ef2f-4cb5-888c-164a3ac63d76"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("a3962d0e-9390-4c7b-ac0a-c38e67d316f3"),
                            FormatId = new Guid("31bcc75a-2d3b-4b61-9d8d-5ede87a51bb6"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("b16c39e3-8a24-48f8-bcfd-bebc47b6c045"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("f93b4db6-e6da-498f-8139-71c16a1a5142"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("a3962d0e-9390-4c7b-ac0a-c38e67d316f3"),
                            FormatId = new Guid("31bcc75a-2d3b-4b61-9d8d-5ede87a51bb6"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("b16c39e3-8a24-48f8-bcfd-bebc47b6c045"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("eca68128-ae00-4a5c-b3d0-c3f52d3f7600"),
                            FormatId = new Guid("000512ce-8e47-4059-84d2-02dc72caef57"),
                            ImagePath = "Jaws1.jpg",
                            Quantity = 1,
                            RatingId = new Guid("99ebc812-8b6e-4920-b0df-aa554f348e6b"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("6594aea4-d61d-4358-83e7-a5f906413435"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("88dc49f2-9955-4821-bacd-8bf85949ba35"),
                            FormatId = new Guid("9aa496be-0daa-46e2-9999-7e203f6edd70"),
                            ImagePath = "PrincessBride.jpg",
                            Quantity = 4,
                            RatingId = new Guid("fde245dc-30d1-4c4c-a7a9-e673da309560"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("9ccf99f6-ab5f-4dcc-9404-8fe3f053551b"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("6b86c69d-f020-403a-9eed-d831b59e4e4b"),
                            FormatId = new Guid("9aa496be-0daa-46e2-9999-7e203f6edd70"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            Quantity = 2,
                            RatingId = new Guid("769dcba4-e41e-414d-8121-57353e377527"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("09b9d7ef-8a3f-46f9-bece-f48f039a4f9a"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("eca68128-ae00-4a5c-b3d0-c3f52d3f7600"),
                            FormatId = new Guid("000512ce-8e47-4059-84d2-02dc72caef57"),
                            ImagePath = "StarWarsNewHope.jpg",
                            Quantity = 1,
                            RatingId = new Guid("99ebc812-8b6e-4920-b0df-aa554f348e6b"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("ad4b9ce4-6f59-4a59-a4de-787859b3ce38"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("eca68128-ae00-4a5c-b3d0-c3f52d3f7600"),
                            FormatId = new Guid("000512ce-8e47-4059-84d2-02dc72caef57"),
                            ImagePath = "PaleRider.jpg",
                            Quantity = 1,
                            RatingId = new Guid("99ebc812-8b6e-4920-b0df-aa554f348e6b"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aacde5b9-36a4-47e4-ab4e-b4e38e5965a9"),
                            GenreId = new Guid("30d85d21-57e7-4c12-9b74-4adb80d8898e"),
                            MovieId = new Guid("009c321b-ef2f-4cb5-888c-164a3ac63d76")
                        },
                        new
                        {
                            Id = new Guid("9427e653-3442-47ba-8253-ce1943c0512e"),
                            GenreId = new Guid("af84ec5a-4aff-4f0b-a91c-2267d8144322"),
                            MovieId = new Guid("009c321b-ef2f-4cb5-888c-164a3ac63d76")
                        },
                        new
                        {
                            Id = new Guid("4f742eba-16ad-4d45-8840-d893be42df00"),
                            GenreId = new Guid("24073d54-e4db-43f7-b68f-2d7779e66612"),
                            MovieId = new Guid("009c321b-ef2f-4cb5-888c-164a3ac63d76")
                        },
                        new
                        {
                            Id = new Guid("c4d1b6d1-60f2-46ba-a6b2-2f894a0f8c8b"),
                            GenreId = new Guid("30d85d21-57e7-4c12-9b74-4adb80d8898e"),
                            MovieId = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55")
                        },
                        new
                        {
                            Id = new Guid("208cd059-817e-474e-932e-aef997479287"),
                            GenreId = new Guid("af84ec5a-4aff-4f0b-a91c-2267d8144322"),
                            MovieId = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55")
                        },
                        new
                        {
                            Id = new Guid("c5ba3665-4d38-4936-80ed-74a9accdc601"),
                            GenreId = new Guid("e8b75e63-a21f-4aa1-821b-87f696873661"),
                            MovieId = new Guid("6594aea4-d61d-4358-83e7-a5f906413435")
                        },
                        new
                        {
                            Id = new Guid("c5cee358-5fcf-415b-83c3-a38be83e4ff7"),
                            GenreId = new Guid("efec83bc-e889-4807-b553-77992a126db8"),
                            MovieId = new Guid("6594aea4-d61d-4358-83e7-a5f906413435")
                        },
                        new
                        {
                            Id = new Guid("e0ff5fb6-0278-4d6e-aaed-978412b69364"),
                            GenreId = new Guid("24073d54-e4db-43f7-b68f-2d7779e66612"),
                            MovieId = new Guid("6594aea4-d61d-4358-83e7-a5f906413435")
                        },
                        new
                        {
                            Id = new Guid("3aa13a4e-8e9e-423e-8735-dd90d7b830ce"),
                            GenreId = new Guid("af84ec5a-4aff-4f0b-a91c-2267d8144322"),
                            MovieId = new Guid("9ccf99f6-ab5f-4dcc-9404-8fe3f053551b")
                        },
                        new
                        {
                            Id = new Guid("6ebdaba1-2113-4caf-9f10-40baf3367e44"),
                            GenreId = new Guid("24073d54-e4db-43f7-b68f-2d7779e66612"),
                            MovieId = new Guid("9ccf99f6-ab5f-4dcc-9404-8fe3f053551b")
                        },
                        new
                        {
                            Id = new Guid("9b5cd0b6-e85c-4fbe-aa3d-a13b5b7c45b5"),
                            GenreId = new Guid("af84ec5a-4aff-4f0b-a91c-2267d8144322"),
                            MovieId = new Guid("09b9d7ef-8a3f-46f9-bece-f48f039a4f9a")
                        },
                        new
                        {
                            Id = new Guid("c1625214-0e0c-4b8e-9312-0d028c5c8b6a"),
                            GenreId = new Guid("e5bf982e-f6ac-4367-af21-62c8cbb41294"),
                            MovieId = new Guid("09b9d7ef-8a3f-46f9-bece-f48f039a4f9a")
                        },
                        new
                        {
                            Id = new Guid("62410701-5a6c-40f7-8dbe-503bb2d65141"),
                            GenreId = new Guid("dc137b92-eb56-41b8-8dfe-049c6dc08504"),
                            MovieId = new Guid("ad4b9ce4-6f59-4a59-a4de-787859b3ce38")
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("379bdffc-124c-4fbe-8328-1606f294de2f"),
                            CustomerId = new Guid("0c929e50-c146-4a58-a062-ed60007d8b1d"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("97876b90-63b0-40d7-9697-b5fb13eb13c2")
                        },
                        new
                        {
                            Id = new Guid("b4e91f1e-0c53-407b-b329-2ef836e06190"),
                            CustomerId = new Guid("b520d8d7-152a-40e0-b2db-8ee42e3f739d"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("97876b90-63b0-40d7-9697-b5fb13eb13c2")
                        },
                        new
                        {
                            Id = new Guid("dab66914-7cfb-4c1c-8181-2b7b7f56ad48"),
                            CustomerId = new Guid("b520d8d7-152a-40e0-b2db-8ee42e3f739d"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("92583004-cf8f-47fa-9055-7af4620dc8ec")
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("OrderId");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("970770bf-0efd-4ae6-a9e6-9eb4b7ffe6d0"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("009c321b-ef2f-4cb5-888c-164a3ac63d76"),
                            OrderId = new Guid("379bdffc-124c-4fbe-8328-1606f294de2f"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("d5352479-a22a-4ece-a28f-e7202892985b"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55"),
                            OrderId = new Guid("379bdffc-124c-4fbe-8328-1606f294de2f"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("31e2f35b-37e4-4e4e-ba93-e424e21dc296"),
                            Cost = 10.99,
                            MovieId = new Guid("5c01a5ab-9dda-402c-b1c4-04c7cb602e55"),
                            OrderId = new Guid("b4e91f1e-0c53-407b-b329-2ef836e06190"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b16c39e3-8a24-48f8-bcfd-bebc47b6c045"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("99ebc812-8b6e-4920-b0df-aa554f348e6b"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("fde245dc-30d1-4c4c-a7a9-e673da309560"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("769dcba4-e41e-414d-8121-57353e377527"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("4b4b07a9-a816-47e2-a919-6dea5911f4a2"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed05b4b0-cc38-4549-9505-480f225dc135"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("97876b90-63b0-40d7-9697-b5fb13eb13c2"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("92583004-cf8f-47fa-9055-7af4620dc8ec"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblCustomer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("OrderItems")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblOrder", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
