// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TN.DVDCentral.PL2.Data;

#nullable disable

namespace TN.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    [Migration("20240216185507_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("767b8c7b-081b-4d08-9ed4-4e1f27674cd0"),
                            UserId = new Guid("5df1ac63-f39d-4a72-bf66-68c686fcf7c8")
                        },
                        new
                        {
                            Id = new Guid("de33ce0f-4ae6-47ad-8b27-7748895fcc01"),
                            UserId = new Guid("043b72bb-4d27-4fd2-a660-42afdea8c641")
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ae5d9f0-4992-47b7-a701-ce5042341faa"),
                            CartId = new Guid("767b8c7b-081b-4d08-9ed4-4e1f27674cd0"),
                            MovieId = new Guid("bf4aaef8-562e-4f67-b0e8-5a2733931244"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("c92574fc-bed2-48fc-b383-8f481d444393"),
                            CartId = new Guid("767b8c7b-081b-4d08-9ed4-4e1f27674cd0"),
                            MovieId = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("a5108349-4b9f-415f-b453-e7d1a3ed7b8f"),
                            CartId = new Guid("de33ce0f-4ae6-47ad-8b27-7748895fcc01"),
                            MovieId = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed2173fb-110a-4eef-96ec-565fa3362c3d"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("5df1ac63-f39d-4a72-bf66-68c686fcf7c8"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("3447086f-6d6d-4adc-bc5a-a38f6e49e96e"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("043b72bb-4d27-4fd2-a660-42afdea8c641"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("2eae0067-fa93-4262-b9a5-76f4e7ed1b38"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("b987fb3e-ec49-4f6b-94a1-665e9e370ab4"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("02fbe255-509e-4cb4-847d-4737b857bce6"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("c3b52051-8b13-4542-8bdf-f08863da8b80"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("a664e12f-4949-45b7-bfc9-ba5e16f3af53"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("b22e65db-93b7-4006-9f27-a8fe47b71464"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("2368626c-a669-48e7-9cab-cf37954c6ebf"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("0b4d6664-4575-48f6-ac50-6d4a8136f060"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("53764a6c-13ec-475b-b263-f0425e3af752"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("e345f8ba-a1a0-4db9-8130-7416595b8a24"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("6e12b338-aca5-4084-9cbb-8b3f34cd87fa"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("b78bdb04-5116-4e96-b22e-582b486fb460"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6627e07a-41eb-4d01-b3ce-e2668a8822c5"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("80d4d8de-d2ba-4b41-bee9-e206e6cc692e"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("bb0bd146-66f6-4fc6-a6ef-8ec426d7cf8b"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("5be2e564-d78b-4758-b71a-93158c44ed39"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("cd38b527-ec83-496a-bfab-59e29f87d82e"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("b42f15b8-6da6-4055-8971-95cfb0436f7d"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("7e348927-1292-4583-9412-087d0352236a"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("fe57bcee-9a97-494c-916e-e12fe61c2aa3"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("63159406-cac9-4bc0-af64-930cd67330bb"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("2a5fb788-cd3b-4141-bea3-21aeae6a619a"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf4aaef8-562e-4f67-b0e8-5a2733931244"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("02fbe255-509e-4cb4-847d-4737b857bce6"),
                            FormatId = new Guid("53764a6c-13ec-475b-b263-f0425e3af752"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("e13bc8de-1d4c-4623-a1e8-3d87da1bc861"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("58b9773a-bdcf-4d45-ac4c-2a9812ddb6ef"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("02fbe255-509e-4cb4-847d-4737b857bce6"),
                            FormatId = new Guid("53764a6c-13ec-475b-b263-f0425e3af752"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("e13bc8de-1d4c-4623-a1e8-3d87da1bc861"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("c3b52051-8b13-4542-8bdf-f08863da8b80"),
                            FormatId = new Guid("e345f8ba-a1a0-4db9-8130-7416595b8a24"),
                            ImagePath = "Jaws1.jpg",
                            Quantity = 1,
                            RatingId = new Guid("06dda4de-8da4-4019-89a1-574e5bd04e19"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("f9846378-7304-416a-bd56-a7d95cac76c8"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("a664e12f-4949-45b7-bfc9-ba5e16f3af53"),
                            FormatId = new Guid("6e12b338-aca5-4084-9cbb-8b3f34cd87fa"),
                            ImagePath = "PrincessBride.jpg",
                            Quantity = 4,
                            RatingId = new Guid("d0b93b2f-d81c-44b9-9a06-3b4265ccda9e"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("a198cd7d-309f-4ebe-ac84-89ba637193ef"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("b22e65db-93b7-4006-9f27-a8fe47b71464"),
                            FormatId = new Guid("6e12b338-aca5-4084-9cbb-8b3f34cd87fa"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            Quantity = 2,
                            RatingId = new Guid("d0a399c3-891a-4a8b-9ffe-48774a1c22cd"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("4857d2cc-4ec3-4f58-9f75-ef295f68e725"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("c3b52051-8b13-4542-8bdf-f08863da8b80"),
                            FormatId = new Guid("e345f8ba-a1a0-4db9-8130-7416595b8a24"),
                            ImagePath = "StarWarsNewHope.jpg",
                            Quantity = 1,
                            RatingId = new Guid("06dda4de-8da4-4019-89a1-574e5bd04e19"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("cfb6729f-9d15-4142-97a8-735ad2140c51"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("c3b52051-8b13-4542-8bdf-f08863da8b80"),
                            FormatId = new Guid("e345f8ba-a1a0-4db9-8130-7416595b8a24"),
                            ImagePath = "PaleRider.jpg",
                            Quantity = 1,
                            RatingId = new Guid("06dda4de-8da4-4019-89a1-574e5bd04e19"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1c6557e-2732-42ec-abba-f66ef675ca94"),
                            GenreId = new Guid("bb0bd146-66f6-4fc6-a6ef-8ec426d7cf8b"),
                            MovieId = new Guid("bf4aaef8-562e-4f67-b0e8-5a2733931244")
                        },
                        new
                        {
                            Id = new Guid("5e6ac83e-2499-43da-9b07-454056199864"),
                            GenreId = new Guid("5be2e564-d78b-4758-b71a-93158c44ed39"),
                            MovieId = new Guid("bf4aaef8-562e-4f67-b0e8-5a2733931244")
                        },
                        new
                        {
                            Id = new Guid("08cdc0cc-8d6c-4a29-9ba0-c52e76e83a5f"),
                            GenreId = new Guid("b42f15b8-6da6-4055-8971-95cfb0436f7d"),
                            MovieId = new Guid("bf4aaef8-562e-4f67-b0e8-5a2733931244")
                        },
                        new
                        {
                            Id = new Guid("bfa85a77-0252-4cc9-b65b-14d6f942444e"),
                            GenreId = new Guid("bb0bd146-66f6-4fc6-a6ef-8ec426d7cf8b"),
                            MovieId = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a")
                        },
                        new
                        {
                            Id = new Guid("6acc0f79-4325-48b5-84f0-5b85ff3bd84b"),
                            GenreId = new Guid("5be2e564-d78b-4758-b71a-93158c44ed39"),
                            MovieId = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a")
                        },
                        new
                        {
                            Id = new Guid("5902a2d4-efb6-4a3c-991f-fc6d1051a39d"),
                            GenreId = new Guid("6627e07a-41eb-4d01-b3ce-e2668a8822c5"),
                            MovieId = new Guid("f9846378-7304-416a-bd56-a7d95cac76c8")
                        },
                        new
                        {
                            Id = new Guid("46c8633d-28f4-4489-b907-298350edf0ba"),
                            GenreId = new Guid("80d4d8de-d2ba-4b41-bee9-e206e6cc692e"),
                            MovieId = new Guid("f9846378-7304-416a-bd56-a7d95cac76c8")
                        },
                        new
                        {
                            Id = new Guid("c42af495-62d2-4a62-bf7e-79ff8a62ae8e"),
                            GenreId = new Guid("b42f15b8-6da6-4055-8971-95cfb0436f7d"),
                            MovieId = new Guid("f9846378-7304-416a-bd56-a7d95cac76c8")
                        },
                        new
                        {
                            Id = new Guid("6ec86810-0f0a-43ab-9462-78a57f7a563e"),
                            GenreId = new Guid("5be2e564-d78b-4758-b71a-93158c44ed39"),
                            MovieId = new Guid("a198cd7d-309f-4ebe-ac84-89ba637193ef")
                        },
                        new
                        {
                            Id = new Guid("11d8521a-8191-451d-8d0c-140e8f0247f8"),
                            GenreId = new Guid("b42f15b8-6da6-4055-8971-95cfb0436f7d"),
                            MovieId = new Guid("a198cd7d-309f-4ebe-ac84-89ba637193ef")
                        },
                        new
                        {
                            Id = new Guid("fdd272f2-b6fa-487b-8c3c-b679363b857b"),
                            GenreId = new Guid("5be2e564-d78b-4758-b71a-93158c44ed39"),
                            MovieId = new Guid("4857d2cc-4ec3-4f58-9f75-ef295f68e725")
                        },
                        new
                        {
                            Id = new Guid("8d64ba9c-bad2-412a-96a6-54cc23858c2c"),
                            GenreId = new Guid("7e348927-1292-4583-9412-087d0352236a"),
                            MovieId = new Guid("4857d2cc-4ec3-4f58-9f75-ef295f68e725")
                        },
                        new
                        {
                            Id = new Guid("c4417640-ae84-4f45-a77a-8c0ca7881731"),
                            GenreId = new Guid("fe57bcee-9a97-494c-916e-e12fe61c2aa3"),
                            MovieId = new Guid("cfb6729f-9d15-4142-97a8-735ad2140c51")
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("424501bf-96a4-4ce2-8057-094981f26c15"),
                            CustomerId = new Guid("3447086f-6d6d-4adc-bc5a-a38f6e49e96e"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("043b72bb-4d27-4fd2-a660-42afdea8c641")
                        },
                        new
                        {
                            Id = new Guid("d6ee8c02-b008-415e-9e96-f214d9bedfa9"),
                            CustomerId = new Guid("2eae0067-fa93-4262-b9a5-76f4e7ed1b38"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("043b72bb-4d27-4fd2-a660-42afdea8c641")
                        },
                        new
                        {
                            Id = new Guid("de7a0d8a-fef5-48a7-8a7b-4a53ae441164"),
                            CustomerId = new Guid("2eae0067-fa93-4262-b9a5-76f4e7ed1b38"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("b987fb3e-ec49-4f6b-94a1-665e9e370ab4")
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("OrderId");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8fc790a-78fa-4436-8452-966f85fefdab"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("bf4aaef8-562e-4f67-b0e8-5a2733931244"),
                            OrderId = new Guid("424501bf-96a4-4ce2-8057-094981f26c15"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("2d6cf04c-3370-4c39-863f-06e07884cc9d"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a"),
                            OrderId = new Guid("424501bf-96a4-4ce2-8057-094981f26c15"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("af95b2c3-688d-4a7b-acc4-9c4a91e37cae"),
                            Cost = 10.99,
                            MovieId = new Guid("3a23c0d0-3834-439b-92f0-62296a15e51a"),
                            OrderId = new Guid("d6ee8c02-b008-415e-9e96-f214d9bedfa9"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e13bc8de-1d4c-4623-a1e8-3d87da1bc861"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("06dda4de-8da4-4019-89a1-574e5bd04e19"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("d0b93b2f-d81c-44b9-9a06-3b4265ccda9e"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("d0a399c3-891a-4a8b-9ffe-48774a1c22cd"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("477e9a89-1a39-42ce-bb5b-a58a05698203"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5df1ac63-f39d-4a72-bf66-68c686fcf7c8"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("043b72bb-4d27-4fd2-a660-42afdea8c641"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("b987fb3e-ec49-4f6b-94a1-665e9e370ab4"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        });
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblCustomer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.HasOne("TN.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("OrderItems")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TN.DVDCentral.PL2.Entities.tblOrder", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("TN.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
